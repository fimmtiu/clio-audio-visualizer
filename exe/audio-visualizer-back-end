#!/usr/bin/env ruby

require "clio_audio_visualizer"
require "optparse"

STATUS_FILE = "public/data.json"
METRICS_FILE = "data/metric_definitions.json"

interval = 60 # seconds
OptionParser.new do |opts|
  opts.banner = "Usage: audio-viualizer-back-end [-i poll interval] [input data file]"

  opts.on("-i", "--poll-interval=INTERVAL", "Seconds between polling for new data") do |i|
    interval = i.to_i
  end
end.parse!

data_file = ARGV[0]
if data_file.nil? && interval < 60
  $stderr.puts "When using the Datadog API, you shouldn't hit it more often than once a minute."
  exit 1
end


definitions = JSON.parse(File.read(METRICS_FILE))

if data_file
  stream = Streams::File.new(definitions, data_file)
else
  stream = Streams::Datadog.new(definitions)
end


until stream.done?
  if data_file
    # We pick 0 and 2**32 to enusure we grab *everything* in the data file
    metrics = stream.read_data(Time.at(0), Time.at(2**32))
  else
    metrics = stream.read_data(Time.now - interval, Time.now)
  end

  # Write the metric variances to the status file.
  Metrics::Writer.new(STATUS_FILE).write(metrics)

  # TO DO: Take the time spent in the loop into account when calculating how long to sleep.
  sleep(interval)
end
